<ResourceDictionary 
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:commonui="clr-namespace:CommonUi;assembly=CommonUi"
    >
    <ResourceDictionary.MergedDictionaries>
        <!--x:Class="WpfPlus.DarkTheme"-->
        <ResourceDictionary Source="Colors/DarkColors.xaml" />
        <ResourceDictionary Source="Brushes/ThemeBrushes.xaml" />

        <ResourceDictionary Source="Styles/Styles.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <!-- Now reference the brush properties directly -->
    <x:Static x:Key="CustomBackgroundBrush" Member="commonui:ColorSettings.BackgroundBrush"/>
    <x:Static x:Key="CustomForegroundBrush" Member="commonui:ColorSettings.ForegroundBrush"/>

    <!-- Vertical RepeatButton Styles -->
    <Style x:Key="DarkVerticalScrollBarUpRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <!-- Use a reasonable default size -->
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="#77000000" BorderThickness="0">
                        <Viewbox Stretch="Uniform">
                            <Canvas Width="10" Height="10">
                                <!-- Up arrow: triangle pointing up -->
                                <Path Fill="{DynamicResource CustomForegroundBrush}" Data="M 0 10 L 5 0 L 10 10 Z" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkVerticalScrollBarDownRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="#77000000" BorderThickness="0">
                        <Viewbox Stretch="Uniform">
                            <Canvas Width="10" Height="10">
                                <!-- Down arrow: triangle pointing down -->
                                <Path Fill="{DynamicResource CustomForegroundBrush}" Data="M 0 0 L 10 0 L 5 10 Z" />
                            </Canvas>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Horizontal RepeatButton Styles -->
    <Style x:Key="DarkHorizontalScrollBarLeftRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="#77000000" BorderThickness="0">
                        <Viewbox Stretch="Uniform">
                            <Canvas Width="10" Height="10">
                                <!-- Left arrow: triangle pointing left -->
                                <Path Fill="{DynamicResource CustomForegroundBrush}" Data="M 10 0 L 0 5 L 10 10 Z"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DarkHorizontalScrollBarRightRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Width" Value="16"/>
        <Setter Property="Height" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="#77000000" BorderThickness="0">
                        <Viewbox Stretch="Uniform">
                            <Canvas Width="10" Height="10">
                                <!-- Right arrow: triangle pointing right -->
                                <Path Fill="{DynamicResource CustomForegroundBrush}" Data="M 0 0 L 10 5 L 0 10 Z"/>
                            </Canvas>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Thumb Style (common for both orientations) -->
    <Style x:Key="DarkScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border Background="Indigo" BorderThickness="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Implicit ScrollBar Style with orientation-based templates -->
    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="#77000000"/>
        <Setter Property="Foreground" Value="SteelBlue"/>
        <Setter Property="MinWidth" Value="16"/>
        <Setter Property="MinHeight" Value="16"/>
        <Setter Property="Template">
            <!-- Default template: assume vertical -->
            <Setter.Value>
                <ControlTemplate TargetType="ScrollBar">
                    <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!-- Top button: Up command -->
                        <RepeatButton Grid.Row="0" Command="ScrollBar.LineUpCommand"
                          Style="{StaticResource DarkVerticalScrollBarUpRepeatButtonStyle}"/>
                        <!-- Middle: the Track. Note: Setting IsDirectionReversed to True corrects the inversion -->
                        <Track Grid.Row="1" x:Name="PART_Track" Focusable="False" IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource DarkScrollBarThumbStyle}"/>
                            </Track.Thumb>
                        </Track>
                        <!-- Bottom button: Down command -->
                        <RepeatButton Grid.Row="2" Command="ScrollBar.LineDownCommand"
                          Style="{StaticResource DarkVerticalScrollBarDownRepeatButtonStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <!-- Trigger for horizontal orientation -->
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollBar">
                            <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <!-- Left button: LineLeft command -->
                                <RepeatButton Grid.Column="0" Command="ScrollBar.LineLeftCommand"
                              Style="{StaticResource DarkHorizontalScrollBarLeftRepeatButtonStyle}"/>
                                <Track Grid.Column="1" x:Name="PART_Track" Focusable="False">
                                    <Track.Thumb>
                                        <Thumb Style="{StaticResource DarkScrollBarThumbStyle}"/>
                                    </Track.Thumb>
                                </Track>
                                <!-- Right button: LineRight command -->
                                <RepeatButton Grid.Column="2" Command="ScrollBar.LineRightCommand"
                              Style="{StaticResource DarkHorizontalScrollBarRightRepeatButtonStyle}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <!-- The actual row content rendered by the GridViewRowPresenter -->
                        <GridViewRowPresenter x:Name="RowPresenter"
                                Content="{TemplateBinding Content}"
                                Columns="{TemplateBinding GridView.ColumnCollection}"
                                Panel.ZIndex="1" />
                        <!-- Overlay that covers the entire row (z-index 3000) -->
                        <Border x:Name="SelectionOverlay"
                  Background="Transparent"
                  Panel.ZIndex="3000"
                  IsHitTestVisible="False" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <!-- When selected, the overlay paints the background -->
                            <Setter TargetName="SelectionOverlay" Property="Background" Value="RebeccaPurple" />
                            <!-- Ensure the row's inherited Foreground remains white -->
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>