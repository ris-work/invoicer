CREATE TABLE pings (dest TEXT, time_now TEXT, latency INT, was_it_ok_not_corrupt INT, did_it_succeed int, PRIMARY KEY (dest, time_now)) STRICT, WITHOUT ROWID;
CREATE TABLE exceptions(time_now TEXT, exception TEXT);
CREATE TABLE process_history (time_now TEXT, pid INT, process_name TEXT, thread_count INT, virtual_memory_use TEXT, paged_memory_use TEXT, private_memory_use TEXT, working_set TEXT, main_window_title TEXT, started TEXT, system_time INT,
user_time INT,
total_time INT, main_module_path TEXT, main_module_version TEXT, PRIMARY KEY (time_now, pid)) STRICT, WITHOUT ROWID;
CREATE VIEW times_collected_by_decaminute AS SELECT substring(time_now, 1, 15) AS time_decaminute, count(process_name) AS count FROM process_history WHERE process_name = 'System' GROUP BY substring(time_now, 1, 15)
/* times_collected_by_decaminute(time_decaminute,count) */
/* times_collected_by_decaminute(time_decaminute,count) */;
CREATE VIEW times_collected_by_hour AS SELECT substring(time_now, 1, 13) AS time_hour, count(process_name) AS count FROM process_history WHERE process_name = 'System' GROUP BY substring(time_now, 1, 13)
/* times_collected_by_hour(time_hour,count) */
/* times_collected_by_hour(time_hour,count) */;
CREATE VIEW avg_working_set AS SELECT process_name, avg(CAST(working_set AS REAL)) AS avg_working_set_value FROM process_history GROUP BY process_name ORDER BY avg_working_set_value DESC
/* avg_working_set(process_name,avg_working_set_value) */
/* avg_working_set(process_name,avg_working_set_value) */;
CREATE VIEW max_working_set AS SELECT process_name, max(CAST(working_set AS REAL)) AS max_working_set_value FROM process_history GROUP BY process_name ORDER BY max_working_set_value DESC
/* max_working_set(process_name,max_working_set_value) */
/* max_working_set(process_name,max_working_set_value) */;
CREATE VIEW distinct_processes AS SELECT DISTINCT(process_name) AS process_name FROM process_history ORDER BY process_name
/* distinct_processes(process_name) */
/* distinct_processes(process_name) */;
CREATE VIEW stats_decaminute AS
SELECT decaminute, process_name, avg_working_set, max_working_set_for_one_instance, 
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END) AS cpu_diff,
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END)*
100.0/(1000 * (unixepoch(decaminute || '0') - unixepoch(prev_decaminute || '0')))  AS cpu_percent,
unixepoch(decaminute || '0') - unixepoch(prev_decaminute || '0') AS time_diff,
thread_count FROM (
SELECT substring(time_now, 1, 15) AS decaminute, process_name, sum(working_set)/tcbdm.count AS avg_working_set,
max(working_set) AS max_working_set_for_one_instance,
sum(total_time)/tcbdm.count AS total_time,
lag(sum(total_time)/tcbdm.count) OVER (PARTITION BY process_name ORDER BY time_now) AS prev_total_time,
lag(substring(time_now, 1, 15)) OVER (PARTITION BY process_name ORDER BY time_now) AS prev_decaminute,
avg(thread_count) AS thread_count
FROM process_history ph JOIN times_collected_by_decaminute tcbdm ON decaminute=tcbdm.time_decaminute 
GROUP BY substring(time_now, 1, 15), process_name
)
/* stats_decaminute(decaminute,process_name,avg_working_set,max_working_set_for_one_instance,cpu_diff,cpu_percent,time_diff,thread_count) */;
CREATE VIEW stats_hourly AS 
SELECT hour, process_name, avg_working_set, max_working_set_for_one_instance, 
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END) AS cpu_diff,
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END)*
100.0/(1000 * (unixepoch(hour || ':00') - unixepoch(prev_hour || ':00')))  AS cpu_percent,
unixepoch(hour || ':00') - unixepoch(prev_hour || ':00') AS time_diff,
thread_count FROM (
SELECT substring(time_now, 1, 13) AS hour, process_name, sum(working_set)/tcbh.count AS avg_working_set,
max(working_set) AS max_working_set_for_one_instance,
sum(total_time)/tcbh.count AS total_time,
lag(sum(total_time)/tcbh.count) OVER (PARTITION BY process_name ORDER BY time_now) AS prev_total_time,
lag(substring(time_now, 1, 13)) OVER (PARTITION BY process_name ORDER BY time_now) AS prev_hour,
avg(thread_count) AS thread_count
FROM process_history ph JOIN times_collected_by_hour tcbh ON hour=tcbh.time_hour 
GROUP BY substring(time_now, 1, 13), process_name
)
/* stats_hourly(hour,process_name,avg_working_set,max_working_set_for_one_instance,cpu_diff,cpu_percent,time_diff,thread_count) */;
CREATE VIEW max_avg_working_set AS 
SELECT process_name, avg(CAST(working_set AS REAL)) AS avg_working_set_value ,
max(CAST(working_set AS REAL)) AS max_working_set_value 
FROM process_history 
GROUP BY process_name 
ORDER BY avg_working_set_value DESC
/* max_avg_working_set(process_name,avg_working_set_value,max_working_set_value) */;
CREATE VIEW window_titles AS 
SELECT DISTINCT ifnull(main_window_title, '') AS window_name, process_name
FROM process_history
/* window_titles(window_name,process_name) */;
CREATE VIEW stats_decaminute_main_module_path AS
SELECT decaminute, main_module_path, avg_working_set, max_working_set_for_one_instance,
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END) AS cpu_diff,
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END)*
100.0/(1000 * (unixepoch(decaminute || '0') - unixepoch(prev_decaminute || '0')))  AS cpu_percent,
unixepoch(decaminute || '0') - unixepoch(prev_decaminute || '0') AS time_diff,
thread_count FROM (
SELECT substring(time_now, 1, 15) AS decaminute, main_module_path, sum(working_set)/tcbdm.count AS avg_working_set,
max(working_set) AS max_working_set_for_one_instance,
sum(total_time)/tcbdm.count AS total_time,
lag(sum(total_time)/tcbdm.count) OVER (PARTITION BY main_module_path ORDER BY time_now) AS prev_total_time,
lag(substring(time_now, 1, 15)) OVER (PARTITION BY main_module_path ORDER BY time_now) AS prev_decaminute,
avg(thread_count) AS thread_count
FROM process_history ph JOIN times_collected_by_decaminute tcbdm ON decaminute=tcbdm.time_decaminute
GROUP BY substring(time_now, 1, 15), main_module_path
)
/* stats_decaminute_main_module_path(decaminute,main_module_path,avg_working_set,max_working_set_for_one_instance,cpu_diff,cpu_percent,time_diff,thread_count) */;
CREATE VIEW stats_hourly_main_module_path AS
SELECT hour, main_module_path, avg_working_set, max_working_set_for_one_instance,
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END) AS cpu_diff,
(CASE WHEN total_time-prev_total_time > 0 THEN total_time-prev_total_time ELSE 0 END)*
100.0/(1000 * (unixepoch(hour || ':00') - unixepoch(prev_hour || ':00')))  AS cpu_percent,
unixepoch(hour || ':00') - unixepoch(prev_hour || ':00') AS time_diff,
thread_count FROM (
SELECT substring(time_now, 1, 13) AS hour, main_module_path, sum(working_set)/tcbh.count AS avg_working_set,
max(working_set) AS max_working_set_for_one_instance,
sum(total_time)/tcbh.count AS total_time,
lag(sum(total_time)/tcbh.count) OVER (PARTITION BY main_module_path ORDER BY time_now) AS prev_total_time,
lag(substring(time_now, 1, 13)) OVER (PARTITION BY main_module_path ORDER BY time_now) AS prev_hour,
avg(thread_count) AS thread_count
FROM process_history ph JOIN times_collected_by_hour tcbh ON hour=tcbh.time_hour
GROUP BY substring(time_now, 1, 13), main_module_path
)
/* stats_hourly_main_module_path(hour,main_module_path,avg_working_set,max_working_set_for_one_instance,cpu_diff,cpu_percent,time_diff,thread_count) */;
CREATE VIEW distinct_processes_main_module AS SELECT DISTINCT(main_module_path) AS main_module_path FROM process_history ORDER BY main_module_path
/* distinct_processes_main_module(main_module_path) */;
CREATE VIEW window_titles_main_module AS
SELECT DISTINCT ifnull(main_window_title, '') AS window_name, 
ifnull(main_module_path, '') AS main_module_path
FROM process_history
/* window_titles_main_module(window_name,main_module_path) */
/* window_titles_main_module(window_name,main_module_path) */;
